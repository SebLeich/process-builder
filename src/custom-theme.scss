// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$process-builder-primary: mat.define-palette(mat.$indigo-palette);
$process-builder-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$process-builder-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$process-builder-theme: mat.define-light-theme((color: (primary: $process-builder-primary,
        accent: $process-builder-accent,
        warn: $process-builder-warn,
      )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($process-builder-theme);


html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.no-padding-dialog>.mat-dialog-container {
  padding: 0px;
  border-radius: 1px;
}

.dialog-navbar {
  height: 64px;
  display: flex;
  align-items: center;
  padding: 0px 1rem;
  box-sizing: border-box;
  background-color: #fafafa;
}

.dialog-navbar>.icon {
  margin-right: 0.5rem;
  font-size: 2rem;
  color: rgb(65, 65, 65);
  height: auto;
  width: auto;
}

.dialog-navbar .text {
  font-size: 1.4rem;
  flex: 1;
}

.dialog-body {
  flex: 1;
  overflow-y: auto;
}